from ics import Calendar, Event
from datetime import datetime, timedelta
import pytz

# 设置时区
timezone = pytz.timezone("Europe/Berlin")

# 开学起始日期（例如2025年4月7日，周一）
semester_start = datetime(2025, 4, 7)

# 每门课程生成事件的函数
def create_recurring_event(name, location, weekday, start_time, end_time, professor, weeks=14):
    events = []
    # 计算第一节课的日期
    days_ahead = (weekday - semester_start.weekday()) % 7
    first_class_date = semester_start + timedelta(days=days_ahead)
    
    for week in range(weeks):
        event_date = first_class_date + timedelta(weeks=week)
        begin_dt = timezone.localize(datetime.combine(event_date.date(), start_time))
        end_dt = timezone.localize(datetime.combine(event_date.date(), end_time))

        e = Event()
        e.name = f"{name} ({professor})"
        e.begin = begin_dt
        e.end = end_dt
        e.location = location
        events.append(e)
    return events

# 构建课程表
calendar = Calendar()

from datetime import time

# 示例课程（可添加更多）
courses = [
    ("Einführung in das wissenschaftliche Arbeiten", "WE5/00.019", 0, time(10, 0), time(12, 0), "Henrich"),
    ("Web Technologien", "WE5/00.019", 1, time(12, 0), time(14, 0), "Henrich"),
    ("Foundations of Software Engineering", "WE5/00.022", 1, time(10, 0), time(12, 0), "Lüttgen"),
    ("Advanced Econometrics", "F21/02.18", 1, time(14, 0), time(16, 0), "Mühlbauer"),
    ("Econometrics Exercise", "FG1/00.08", 1, time(16, 0), time(18, 0), "Dörner"),
    ("Web Technologien", "WE5/00.019", 2, time(8, 0), time(10, 0), "Henrich"),
    ("Algorithmen und Komplexität", "WE5/04.004", 2, time(10, 0), time(11, 0), "N.N."),
    ("Algorithmen und Komplexität", "WE5/02.020", 2, time(11, 0), time(12, 0), "N.N."),
    ("Web Technologien Übung Gruppe 2", "WE5/02.005", 2, time(14, 0), time(16, 0), "N.N."),
    ("Advanced Data Analysis With R", "RZ/01.02", 3, time(8, 0), time(10, 0), "Messer"),
    ("Einführung für Gruppe 2", "WE5/02.005", 3, time(12, 0), time(14, 0), "Jegan"),
    ("Statistische Programmierung mit R", "RZ/01.02", 3, time(14, 0), time(16, 0), "Messer"),
    ("xAI-Projekt", "WE5/04.003", 3, time(16, 0), time(17, 0), "Dörnich"),
    ("VIS-GIV-B Online", "Online", 3, time(17, 0), time(18, 0), "Poddar")
]

# 添加课程到日历
for name, location, weekday, start_time, end_time, professor in courses:
    events = create_recurring_event(name, location, weekday, start_time, end_time, professor)
    for event in events:
        calendar.events.add(event)

# 导出到 .ics 文件
with open("timetable_SS2025.ics", "w") as f:
    f.writelines(calendar)
